#+OPTIONS: \n:t
* 博客安装
hexo安装
# 参考 http://www.jianshu.com/p/ed32ac187dbc
mkdir hexo
cd hexo
sudo cnpm install -g hexo
#  提示 link /usr/local/node/bin/hexo@ -> /usr/local/node/lib/node_modules/hexo/bin/hexo
# -g代表全局依赖 安装后可以在其他目录任意调用，如webback等可以使用全局安装;
# 本地安装的优点是升级依赖、重命名等时可以和全局的依赖避免冲突 参考http://www.cnblogs.com/zhuzhenwei918/p/7228915.html
sudo hexo init
sudo cnpm install hexo-deployer-git --save
hexo d
使用
hexo generate = hexo g
hexo server = hexo s
hexo delopy = hexo d
hexo new = hexo n

更多参考 https://xuanwo.org/2015/03/26/hexo-intor/

* 树型结构数据呈现
*** 可分页版 
#  从数组看依次取出10条id,在根据id取出相应的父节点数据，最后过滤10条里的重复数组
#+BEGIN_SRC php
    private function createTree($array, $pid = 0)
    {
        $ret = array();

        foreach($array as $key => $value){
            if($value['pid'] == $pid){
                $tmp = $value;
                unset($array[$key]);
                $tmp['list'] = $this->createTree($array, $value['id']);
                $ret[] = $tmp;
            }
        }

        return $ret;
    }

    private function array_multiToSingle($array,$clearRepeated=false)
    {
        if(!isset($array)||!is_array($array)||empty($array)){
            return false;
        }
        if(!in_array($clearRepeated,array('true','false',''))){
            return false;
        }
        static $result_array=array();
        foreach($array as $value){
            if(is_array($value)){
                $this->array_multiToSingle($value);
            }else{
                $result_array[]=$value;
            }
        }
        if($clearRepeated){
            $result_array=array_unique($result_array);
        }
        return $result_array;
    }


    private function array_SingleTo2($array)
    {
        static $result_array=array();
        $len = count($array)/10;
        for($i=0;$i<$len;$i++){
            $result_array[$i]['level'] = array_shift($array);
            $result_array[$i]['id'] = array_shift($array);
            $result_array[$i]['pid'] =array_shift($array);
            $result_array[$i]['name'] = array_shift($array);
            $result_array[$i]['user'] = array_shift($array);
            $result_array[$i]['auth'] = array_shift($array);
            $result_array[$i]['updated'] = array_shift($array);
            $result_array[$i]['title'] = array_shift($array);
            $result_array[$i]['user_id'] = array_shift($array);
            $result_array[$i]['comments_id'] = array_shift($array);
        }

        return $result_array;
    }

    private function array_addLevel($arr)
    {

        foreach($arr as $key=>$val){

            array_unshift($arr[$key],0);

            if(isset($val['list']) && is_array($val['list']) && !empty($val['list'])){
                foreach($val['list'] as $k=>$v){
                    array_unshift($arr[$key]['list'][$k],1);

                    //
                    if(isset($v['list']) && is_array($v['list']) && !empty($v['list'])){
                        foreach($v['list'] as $kk=>$vv){
                            array_unshift($arr[$key]['list'][$k]['list'][$kk],2);
                        }
                    }
                    //
                }
            }

        }

        return $arr;
    }

    function array_unique_2d($array2D){
        $temp = $res = array();
        foreach ($array2D as $v){
            $v = json_encode($v);  //降维,将一维数组转换字符串
            $temp[] = $v;
        }
        $temp = array_unique($temp);    //去掉重复的字符串,也就是重复的一维数组
        foreach ($temp as $item){
            $res[] = json_decode($item,true);   //再将拆开的数组重新组装
        }
        return $res;
    }

    /**
     * 管理端AJAX数组
     * @param Request $request
     * @param String 'comments_resource'
     * @return mixed
     */
    public function listResourceIndex(Request $request)
    {
        $draw = $request->input('draw', 1);
        $start = $request->input('start', 0);
        $length = $request->input('length', 10);
        $auth = intval($request->input('auth', 0));
        $order['name'] = $request->input('columns.' . $request->input('order.0.column').'.name');
        $order['dir'] = $request->input('order.0.dir', 'asc');
        $search['value'] = $request->input('search.value', '');
        $search['regex'] = $request->input('search.regex', false);

//        $model = DB::table('comments_resource as cr');
//
//        if ($search['value']) {
//            if ($search['regex'] == 'true') {//传过来的是字符串不能用bool值比较
//                $model = $model->where('title', 'like', "%{$search['value']}%");
//            } else {
//                $model = $model->where('title', $search['value'])->orWhere('title', $search['value']);
//            }
//        }
//        $model = $model->leftJoin('comments as c', 'c.comments_id', '=', 'cr.comments_id');
//        $model = $model->leftJoin('users as u', 'u.id', '=', 'cr.user_id');
//        $count = $model->count();
//
//
//        $model = $model->orderBy('cr.updated_at', $order['dir']);
//        $arr = $model->offset($start)->limit($length)->get([
//            'level','comments_resource_id as id','parent_id as pid','txt as name','u.name as user',
//            'is_check as auth','cr.updated_at as updated','title','cr.user_id','cr.comments_id']);
//        $auth = Comments::COMMENTS_CHECK_ING;
        
        if($auth == '0'){

            $arr0 = DB::select('
                        SELECT comments_resource_id as id
                        FROM comments_resource t2
                        LEFT JOIN comments as c ON c.comments_id = t2.comments_id 
                        LEFT JOIN users as u ON u.id = t2.user_id
                        WHERE t2.is_check = '.$auth.'
                        ORDER BY t2.comments_resource_id
                    ');

            $arr1 = DB::select('
                        SELECT comments_resource_id as id
                        FROM comments_resource t2
                        LEFT JOIN comments as c ON c.comments_id = t2.comments_id 
                        LEFT JOIN users as u ON u.id = t2.user_id
                        WHERE t2.is_check = '.$auth.'
                        ORDER BY t2.comments_resource_id
                        LIMIT 10 OFFSET 0;
                    ');
            
            $arr2 = [];
            foreach($arr1 as $val){
                $arr2[]= DB::select('
                    SELECT level,comments_resource_id as id,parent_id as pid,txt as name,u.name as user,
                        is_check as auth,t2.updated_at as updated,title,t2.user_id,t2.comments_id
                    FROM ( 
                        SELECT 
                                @r AS _id, 
                                (SELECT @r := parent_id as pid FROM comments_resource WHERE comments_resource_id = _id) AS pid, 
                                 @l := @l + 1 AS lvl 
                        FROM 
                                (SELECT @r := '.$val->id.', @l := 0) vars, 
                                comments_resource h 
                        WHERE @r <> 0) t1 
                    JOIN comments_resource t2 ON t1._id = t2.comments_resource_id
                    LEFT JOIN comments as c ON c.comments_id = t2.comments_id 
                    LEFT JOIN users as u ON u.id = t2.user_id 
                    ORDER BY t2.comments_resource_id
                ');
                
            }

            $arr3 = [];
            foreach($arr2 as $val){
                foreach($val as $v){
                    array_push($arr3, $v);
                }
            }

            $arr = $this->array_unique_2d($arr3);

            $count = count($arr0);

        }else{

            $arr12 = DB::select('
                    SELECT comments_resource_id as id
                    FROM comments_resource t2
                    LEFT JOIN comments as c ON c.comments_id = t2.comments_id 
                    LEFT JOIN users as u ON u.id = t2.user_id 
                    WHERE t2.is_check = '.$auth.';
                ');

            $arr11 = DB::select('
                    SELECT level,comments_resource_id as id,parent_id as pid,txt as name,u.name as user,
                        t2.is_check as auth,t2.updated_at as updated,title,t2.user_id,t2.comments_id
                    FROM comments_resource t2
                    LEFT JOIN comments as c ON c.comments_id = t2.comments_id 
                    LEFT JOIN users as u ON u.id = t2.user_id 
                    WHERE t2.is_check = '.$auth.'
                    ORDER BY t2.comments_resource_id
                    LIMIT '.$length.' OFFSET '.$start.';
                ');
            $arr = json_decode(json_encode($arr11), true);

            $count = count($arr12);
        }
        
        
//        $arr = json_decode(json_encode($arr1), true);
//        $arr = $this->createTree($arr);
//        $arr = $this->array_multiToSingle($arr);
//        $arr = $this->array_SingleTo2($arr);

        return [
            'draw' => $draw,
            'recordsTotal' => $count,
            'recordsFiltered' => $count,
            'data' => $arr
        ];
    }
#+END_SRC
# php函数二维数组惟一过滤
# refer
http://www.dewen.net.cn/q/1511/%E5%A6%82%E4%BD%95%E5%AF%B9php+%E5%81%9A%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E7%9A%84array_unique

*** 不可分页版
# 控制器二维变嵌套，再变一维，再变二维返回前端
#+BEGIN_SRC php 
  function createTree($array, $pid = 0)
    {
        $ret = array();

        foreach($array as $key => $value){
            if($value['pid'] == $pid){
                $tmp = $value;
                unset($array[$key]);
                $tmp['list'] = $this->createTree($array, $value['id']);
                $ret[] = $tmp;

            }
        }

        return $ret;
    }


    function array_multiToSingle($array,$clearRepeated=false)
    {
        if(!isset($array)||!is_array($array)||empty($array)){
            return false;
        }
        if(!in_array($clearRepeated,array('true','false',''))){
            return false;
        }
        static $result_array=array();
        foreach($array as $value){
            if(is_array($value)){
                $this->array_multiToSingle($value);
            }else{
                $result_array[]=$value;
            }
        }
        if($clearRepeated){
            $result_array=array_unique($result_array);
        }
        return $result_array;
    }

    function array_SingleTo2($array){
        static $result_array=array();
        $len = (count($array)+1)/3-1;
        for($i=0;$i<$len;$i++){
            $result_array[$i]['id'] = array_shift($array);
            array_shift($array);
            $result_array[$i]['name'] = array_shift($array);
        }

        return $result_array;
    }

    public function index()
    {
        $arr = array(
            array('id'=>1,'pid'=>0,'name'=>'1'),
            array('id'=>2,'pid'=>1,'name'=>'1-1'),
            array('id'=>3,'pid'=>0,'name'=>'2'),
            array('id'=>4,'pid'=>3,'name'=>'3-3'),
            array('id'=>5,'pid'=>3,'name'=>'3-4'),
            array('id'=>6,'pid'=>1,'name'=>'1-2')
        );

        $arr = $this->createTree($arr);
        $arr = $this->array_multiToSingle($arr);
        $arr = $this->array_SingleTo2($arr);
        dd($arr);die;

        $tree = json_encode($this->createTree($arr), JSON_UNESCAPED_UNICODE);

        return view('admin.comments.index',['tree'=>$tree]);
    }
#+END_SRC
*** 参考版 json树形数组->html

        var menulist = {
            "menulist": [
                { "MID": "M001", "MName": "首页", "Url": "#", "menulist": "" },
                { "MID": "M002", "MName": "车辆买卖", "Url": "#", "menulist":
                    [
                        { "MID": "M003", "MName": "新车", "Url": "#", "menulist":
                            [
                                { "MID": "M006", "MName": "奥迪", "Url": "#", "menulist": "" },
                                { "MID": "M007", "MName": "别克", "Url": "#", "menulist": "" }
                            ]
                        },
                        { "MID": "M004", "MName": "二手车", "Url": "#", "menulist": "" },
                        { "MID": "M005", "MName": "改装车", "Url": "#", "menulist": "" }
                    ]
                },
                { "MID": "M006", "MName": "宠物", "Url": "#", "menulist": "" }
            ]
        };

        $("#click").click(function () {
             var showlist = $("<ul></ul>");
             showall(menulist.menulist, showlist);
             $("#tree").append(showlist);
        });


        //menu_list为json数据
        //parent为要组合成html的容器
        function showall(menu_list, parent) {
            for (var menu in menu_list) {
                //如果有子节点，则遍历该子节点
                if (menu_list[menu].menulist.length > 0) {
                    //创建一个子节点li
                    var li = $("<li></li>");
                    //将li的文本设置好，并马上添加一个空白的ul子节点，并且将这个li添加到父亲节点中
                    $(li).append(menu_list[menu].MName).append("<ul></ul>").appendTo(parent);
                    //将空白的ul作为下一个递归遍历的父亲节点传入
                    showall(menu_list[menu].menulist, $(li).children().eq(0));
                }
                //如果该节点没有子节点，则直接将该节点li以及文本创建好直接添加到父亲节点中
                else {
                    $("<li></li>").append(menu_list[menu].MName).appendTo(parent);
                }
            }
         }

# refer http://www.cnblogs.com/hxhbluestar/archive/2011/11/17/2252009.html
*** 递归json to html
*** 优化版：php二维数组处理返回嵌套数组，前端循环变量显示
#+BEGIN_SRC php

    function createTree($array, $pid = 0){
        $ret = array();

        foreach($array as $key => $value){
            if($value['pid'] == $pid){
                $tmp = $value;
                unset($array[$key]);
                $tmp['list'] = $this->createTree($array, $value['id']);
                $ret[] = $tmp;
            }
        }

        return $ret;
    }

    public function index()
    {
        $array = array(
            array('id'=>1,'pid'=>'0','name'=>'11111'),
            array('id'=>2,'pid'=>'1','name'=>'22222'),
            array('id'=>3,'pid'=>'0','name'=>'33333'),
            array('id'=>4,'pid'=>'3','name'=>'44444'),
            array('id'=>5,'pid'=>'4','name'=>'55555'),
            array('id'=>6,'pid'=>'1','name'=>'66666')
        );

        $tree = json_encode($this->createTree($array), JSON_UNESCAPED_UNICODE);

        return view('admin.comments.index',['tree'=>$tree]);
    }

#+END_SRC
#+BEGIN_SRC js

            <button id="click">click</button>
                        <div id="tree">

                        </div>

            var tree = {}
                tree.list = {!! $tree !!}

            $("#click").click(function () {
                var showlist = $("<ul></ul>");
                showall(tree.list, showlist);
                $("#tree").append(showlist);
            });

            function showall(list, parent) {
                for (var index in list) {
                    if (list[index].list.length > 0) {
                        var li = $("<li></li>");
                        $(li).append(list[index].name).append("<ul></ul>").appendTo(parent);
                        showall(list[index].list, $(li).children().eq(0));
                    }else {
                        $("<li></li>").append(list[index].name).appendTo(parent);
                    }
                }
            }

#+END_SRC
* json php数据格式转化

js
JSON 字符串 -> JavaScript 对象
#+BEGIN_EXAMPLE
JSON.Parse()
#+END_EXAMPLE

JavaScript 对象 -> JSON 字符串	
~JSON.stringify()~	
php
Converting an array/stdClass -> stdClass
   = $stdClass = json_decode(json_encode($booking)); =
Converting an array/stdClass -> array
   ~ $array = json_decode(json_encode($booking), true);~
stdClass -> array  一维
~$array = (array)$stdClass;~

* jquery
plugins  https://plugins.jquery.com/
pace.min.js   页面加载提示进度条
jquery-1.9.1.min.js   1.9是最后支持ie678的版本
jquery-migrate-1.1.0.min.js   提供到此版本的api缺失
jquery.slimscroll.min.js   在固定区域里显示文本，超出添加滑块
jquery.cookie.js    cookie
jquery.gritter.js    session消息提示
jquery.dataTables.js  
dataTables.bootstrap.min.js    datatables
sweetalert.js   警告框（删除时等）

** each
var arrSource=[]

    // 授权
    $(document).on('click','.auth',function(){  
     $(this).parents('tr').children('td').each(function (i) {

            arrSource[i] = []
            if(i==0){
                console.log(arrSource[i].push($(this).children(0).val()))
            }else{

                arrSource[i].push($(this).html())
            }
        });
    })
** class的选择点击事件
$(document).on('click', '.spanTagDel', function(){
            var tagName = $(this).parent().text()
            alert(tagName)
        })
** jquery手册提示
选择标签找关键字  筛选 >过滤 查找 
* scrollTop

https://stackoverflow.com/questions/16475198/jquery-scrolltop-animation

$("html, body").animate({ scrollTop: 50 }, 300);

* datatable
DOM / jQuery events 获取一行的数据
DataTables events  点击搜索，分页等事件
Column rendering 可以渲染链接的列，自定义列，按钮等
Setting defaults 设置所有datatable的相同的共同的一些参数
Row created callback 对每一列的数据处理显示 比如判断大小
Footer callback 计算每页价格的总计
Custom toolbar elements 定义div button标签到datatable里
Generated content for a column  列中显示按钮，获取数据
Custom data source property  ajax获取的数据是对象格式，对象有属性比如{"data":[[...],[...]]}
Deferred rendering for speed  延迟加载，datatable只渲染当前页面的数据，提高速度

Row selection (multiple rows) 获取所选数据

Select
单选，全选等按钮 已选择状态 Buttons 
重新加载时可以维护已选择的不消失 Retain selection on reload
点击按钮获取datatable数据 Get selected items

例子

** 结合daterangepicker实现Datatables表格带参数查询
 http://datatables.club/example/user_share/send_extra_param.html
** 操作按钮用js表现，checkbox第一列
                    "columnDefs": [
                    {
                        "render": function ( data, type, row ) {
                            return ' <a href="{{ $_SERVER['HTTP_HOST'] }}/admin/catalog/'+row.id+'/edit">' +
                                '<button id="'+row.id+'" class="btn btn-xs btn-success">' +
                                '<i class="fa fa-pencil"></i> 编辑 </button></a> ' +
                                ' <button id="'+row.id+'" class="btn btn-xs btn-danger">' +
                                '<i class="fa fa-trash"></i> 删除 </button> ';
                        },
                        "targets": 4
                    },
                    {
                        render: function ( data, type, row ) {
                            return '';
                        },
                        orderable: false,
                        className: 'select-checkbox cursor-pointer',
                        targets:   0
                    }
]
** 修改datatable 的默认英文如Previous为中文
google 搜索datatables文档
文档中找language 的菜单
http://l-lin.github.io/angular-datatables/archives/#!/api
ctrl+F 搜索lang
然后到文档中修改
** datatables + vue 实现增加删除列表功能
                             
                            <div class="form-group">
                                <label class="control-label col-md-2 col-sm-2" for="url">资源选择 * :</label>
                                <div class="col-md-4 col-sm-4">
                                    <table class="table table-bordered table-hover" id="datatable">
                                        <thead>
                                            <tr>
                                                <th style="width: 10px;"></th>
                                                <th>资源列表</th>
                                                <th style="width:20px;"></th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                                <div class="col-md-4 col-sm-4">
                                	{{--<div class="input-group">--}}
                                		{{--<input type="hidden" name="resource_id" value="" />--}}
                                        {{--<input class="form-control" type="text" name="resource_name" placeholder="已选资源展示" />--}}
                                        {{--<div class="input-group-btn">--}}
                                            {{--<button type="button" class="btn btn-success">选择资源</button>--}}
                                        {{--</div>--}}
                                    {{--</div>--}}
                                    <div class="height-50"></div>
                                    {{--<div id="textareaShow" class="form-control" style="height:60px;margin-bottom:5px;">
                                        <div id="app">
                                            <button v-on:click="add">add</button>
                                            <button v-on:click="del(22)">del</button>
                                            <div v-for="(item, index) in items" style="height:25px;">
                                                <span v-bind:id="item.id" class="bg-info btn-xs"> ${ item.name } <i style="cursor:pointer"> &times;</i></span>
                                                ${ index } - ${ item.id } - ${ item.name }
                                            </div>
                                        </div>
                                    </div>--}}
                                    <div id="inner-content-div">
                                        <table class="table table-bordered table-hover">
                                            <thead>
                                            <tr>
                                                {{--<th style="width: 10px;"></th>--}}
                                                <th>已选资源</th>
                                                <th style="width:50px;"></th>
                                            </tr>
                                            </thead>
                                            <tbody id="app">
                                            <tr  v-for="(item, index) in items">
                                                <td>${ item.name }</td>
                                                <td><a v-bind:id="item.id" v-on:click="del(item.id)" class="btn btn-xs">
                                                        <i class="fa fa-trash"></i></a></td>
                                            </tr>
                                            </tbody>
                                        </table>
                                    </div>


                                </div>

                            </div>




			var table = $('#datatable').DataTable({
            "processing": true,
            'language': {
                "url": "{!! asset('asset_admin/assets/lang/datatable.zh_cn.lang') !!}"
            },
            "serverSide": true,
            'searchDelay': 300,//搜索延时
            'search': {
                regex: true//是否开启模糊搜索
            },
            "dom": 'frtpB',
            'order': [[1, 'desc']],
            'select': {
                style: 'multi',
                selector: 'td:first-child',
                info: false
            },
            buttons: [
                {
                    text: '批量添加',
                    action: function () {
                        var count = table.rows( { selected: true } ).count();
//                        $('#textareaShow').val(count)
                        var data = table.rows( { selected: true } ).data().toArray();
                        var str = '', selected = [], target = []
                        for(var i=0;i<count;i++){
                            selected[i] = {id:data[i].id, name:filterHTML(data[i].name)}
                        }

                        for(var j=0;j<selected.length;j++){
                            app.add(selected[j])
                        }

//                        for(var i=0;i<count;i++){
//                            console.log(data[i].id)
//                            str += ' <span data-id="'+data[i].id+'" class="bg-info btn btn-xs">'+filterHTML(data[i].name)
//                                +'<i> &times;</i></span> '
//                        }
//                        $('#textareaShow').append(str)
                    }
                }
            ],
            "columnDefs": [
                {
                    render: function (data, type, row) {
                        return '';
                    },
                    orderable: false,
                    className: 'select-checkbox cursor-pointer',
                    targets: 0
                },
                {
                    render: function (data, type, row) {
                        return '<a data-id="'+data+'"  data-name="'+filterHTML(row.name)+'" class="btnAdd btn btn-xs"><i class="fa fa-plus"></i></a>';
                    },
                    orderable: false,
                    targets: 2
                }
            ],
            "ajax": {
                'url': "/admin/catalog/ajaxIndex",
                'data': {
                    'parent': function () {
                        return $('input[name="parent"]').val();
                    }
                }
            },
            "columns": [
                {"data": "id", "name": "id", "orderable": false},
                {"data": "name", "name": "name", "orderable": false},
                {"data": "id", "name": "id", "orderable": false},
            ]
        });//end table



        var app = new Vue({
            delimiters: ['${', '}'],
            el: '#app',
            data: {
                items: [
                    { id: 11, name: 'aaaa' },
                    { id: 22, name: 'bbbb' },
                    { id: 33, name: 'cccc' },
                ]
            },
            methods: {
                add: function (obj) {
//                    var str = ''
//                    for(var i=0;i<this.items.length;i++){
//                        str += this.items[i].id+'--'+this.items[i].name
//                    }
//                    console.log(str)
                    var bool=true;
                    this.items.forEach(function(element) {
                        if(element.id==obj.id){
                            $.gritter.add({
                                title: '操作消息！',
                                text: element.name+' 已经添加了，请重新操作！'
                            });
                            console.log(element.name+' 重复了')
                            bool = false
                        }
                    });

                    if(bool){
                        this.items.push(obj)
                    }

                    table.rows().deselect();

                },
                del: function(id){

                    var target = []
                    this.items.forEach(function(element) {
                        if(element.id!=id){
                            target.push({id:element.id,name:element.name})
                        }else{
                            console.log('已删除 '+element.name)
                        }
                    });
                    this.items = target
                }
            }
        })//end app


        //添加资源
        $('#datatable').on('click','.btnAdd',function(){
            var id = $(this).attr('data-id')
            var name = $(this).attr('data-name')
            app.add({id:id,name:name})
        })

        //固定选择区域
        $('#inner-content-div').slimScroll({
            height: '400px',
            railVisible: true,
//            alwaysVisible: true
        });
* js location
location.reload()

* js添加删除class
var classVal = document.getElementById("id").getAttribute("class");

//删除的话
classVal = classVal.replace("someClassName","");
document.getElementById("id").setAttribute("class",classVal );

//添加的话
classVal = classVal.concat(" someClassName");
document.getElementById("id").setAttribute("class",classVal );

//替换的话
classVal = classVal.replace("someClassName","otherClassName");
document.getElementById("id").setAttribute("class",classVal );
* bower 
bower install jstree --save 总是报错
使用bower install jstree 在bower_components生成jstree目录
在次bower install jstree --save 在bower.js添加jstree项

* checkbox
** jquery

$("input[type='checkbox']").prop("checked");  //选中复选框为true，没选中为false
$("input[type='checkbox']").prop("disabled", false);
$("input[type='checkbox']").prop("checked", true);


    $(function(){
        $('#sourceAll').click(function(ev){
            $('INPUT[name="chk"]').attr('checked',$('#sourceAll').prop('checked'));  //attr可以改为prop试试
        });

        $('INPUT[name="chk"]').click(function(ev){
            $('#sourceAll').attr('checked',
                $('INPUT[name="chk"]:checked').length == $('INPUT[name="chk"]').length);
        });
    });

	$('input[name="chkUsers"]:checked').each(function () {
            id_array.push($(this).val());
    });

** js
    全选
    $("#sourceAll").click(function() {
        if (this.checked) {
            allCheck('chk',true);
        } else {
            allCheck('chk',false);
        }
    })

    function allCheck(name,boolValue) {
        var allvalue = document.getElementsByName(name);
        for (var i = 0; i < allvalue.length; i++) {
            if (allvalue[i].type == "checkbox")
                allvalue[i].checked = boolValue;
        }
    }


       var checkbox=document.getElementsByName('chkUsers');
        for(var i=0;i<checkbox.length;i++){
            if(checkbox[i].checked==true){
                id_array.push(checkbox[i].value);
            }
        }
* cookie
//http://www.cnblogs.com/Darren_code/archive/2011/11/24/Cookie.html

    function getCookie(c_name){
        if (document.cookie.length>0){
            c_start=document.cookie.indexOf(c_name + "=")
            if (c_start!=-1){
                c_start=c_start + c_name.length+1
                c_end=document.cookie.indexOf(";",c_start)
                if (c_end==-1) c_end=document.cookie.length
                return unescape(document.cookie.substring(c_start,c_end))
            }
        }
        return ""
    }

    function setCookie(c_name, value, expiredays){
　　　　var exdate=new Date();
// 　　　　exdate.setDate(exdate.getDate() + expiredays);
        exdate.setHours(exdate.getHours() + expiredays);
　　　　document.cookie=c_name+ "=" + escape(value) + ((expiredays==null) ? "" : ";expires="+exdate.toGMTString());
　　}
* color-admin
** 多个表格，不能绘制显示
desc 能ajax返回数据，但是不能在页面显示出来，提示处理中...
answ 删掉页面的data-sort-id，导致的冲突解决
** div js click on 等事件失效
@section('admin-content')
    <div id="content" class="content">
        <!-- begin breadcrumb -->
        <ol class="breadcrumb pull-right">
            <li><a href="javascript:;">主页</a></li>
            <li><a href="javascript:;">资源管理</a></li>
            <li class="active">新增资源</li>
        </ol>
        <!-- end breadcrumb -->
        <!-- begin page-header -->
        <h1 class="page-header">新增资源 <small></small></h1>
        <!-- end page-header -->

        <!-- begin row -->
        <div class="row">
            {{--<!-- begin col-6 加上这层div js click on 等事件失效 -->--}}
            {{--<div class="col-md-12">--}}
** $('.selectpicker').selectpicker('render');加上后好像与$.ajax方法冲突

* Composer 安装与使用
  参考 https://pkg.phpcomposer.com/
  https://laravel-china.org/topics/1901/correct-method-for-installing-composer-expansion-pack

** composer 安装
php -r "copy('https://install.phpcomposer.com/installer', 'composer-setup.php');"

php composer-setup.php

php -r "unlink('composer-setup.php');"

全局安装
sudo mv composer.phar /usr/local/bin/composer

经常执行 composer selfupdate 以保持 Composer 一直是最新版本

镜像用法
修改当前项目的 composer.json 配置文件
进入你的项目的根目录（也就是 composer.json 文件所在目录），执行如下命令：

composer config repo.packagist composer https://packagist.phpcomposer.com
上述命令将会在当前项目中的 composer.json 文件的末尾自动添加镜像的配置信息（你也可以自己手工添加）：

"repositories": {
    "packagist": {
        "type": "composer",
        "url": "https://packagist.phpcomposer.com"
    }
}


** 正确的 Composer 扩展包安装方法
流程一：新项目流程#

创建 composer.json，并添加依赖到的扩展包；
运行 composer install，安装扩展包并生成 composer.lock；
提交 composer.lock 到代码版本控制器中，如：git;

流程二：项目协作者安装现有项目#

克隆项目后，根目录下直接运行 composer install 从 composer.lock 中安装 指定版本 的扩展包以及其依赖；
此流程适用于生产环境代码的部署。

流程三：为项目添加新扩展包#

使用 composer require vendor/package 添加扩展包；
提交更新后的 composer.json 和 composer.lock 到代码版本控制器中，如：git;


composer install - 如有 composer.lock 文件，直接安装，否则从 composer.json 安装最新扩展包和依赖；
composer update - 从 composer.json 安装最新扩展包和依赖；
composer update vendor/package - 从 composer.json 或者对应包的配置，并更新到最新；
composer require new/package - 添加安装 new/package, 可以指定版本，如： composer require new/package ~2.5.
* laravel
** laravel-my
composer create-project laravel/laravel laravel-my --prefer-dist
# 注：有dist和source两种安装方式，dist是强制使用压缩包，而source是使用源代码安装，如果是想从source安装，那么可以改成--prefer--source
composer require "maatwebsite/excel": "~2.1.0"
** 单个项目ajax删除实现
           $.ajaxSetup({
                headers:{
                    'X-CSRF-TOKEN':'{!! csrf_token() !!}'
                }
            })
                        $.ajax({
                            url:'/admin/catalog/'+data.id,
                            type:'POST',
                            data:'_method=DELETE',
                            success:function(data){
                                console.log(data)
                                $.gritter.add({
                                    title: '操作消息！',
                                    text: '删除成功'
                                });
                                location.reload()  //刷新时弹出消息来不及显示，需要通过php端来实现跳转才好
                            },
                            error:function(xhr){
                                console.log('error')
                                console.log(xhr)
                            }
                        })//end ajax
** 开启项目流程
编写.env
composer dump-autoload
php artisan key:genarate

** url带参数
<a href="{{ URL::to('admin/source/iauth').'?'.http_build_query(['id'=>$data->source_id, 'title'=>$data->title, 'update'=>$data->updated_at]) }}"  data-id="{{ $data->source_id }}" data-title="{{ $data->title }}" data-update="{{ $data->updated_at }}" class="btn btn-inverse m-r-5 m-b-5">资源授权</a>
                                    
** 调试
 FatalThrowableError in 2154f392745gf102547be138a945a11b58e5649203.php line 2: Call to undefined method Illuminate\View\Factory::getFirstLoop()
php artisan view:clear

** 任务调度
   sudo vim /etc/crontab
  * * * * root /data/wwwroot/www.hui.c/artisan schedule:run >> /dev/null 2>&1

/etc/init.d/crond start
** 时间 created_at updated_at

http://www.cnblogs.com/Eden-cola/p/laravel-created-at-column-name.html
http://www.piaoyi.org/php/Laravel-created_at-updated_at-timestamp.html
* laravel ajax上传文件
** 直接上传到服务器交互
         $.ajaxSetup({
            headers: {
                'X-CSRF-TOKEN': $("input[name='_token']").val()
            }
        });

        $('#pic').on('click', function(){

            $('#photo_upload').trigger('click');

            $('#photo_upload').on('change', function(){
                var obj = this;
                var formData = new FormData();
                formData.append('thumb', this.files[0]);

                $.ajax({
                    url: '/admin/source/uploadPic/',
                    type: 'post',
                    data: formData,
                    processData: false,
                    contentType: false,
                    beforeSend:function(){
                        $('#pic').attr('src', '/img/uploading.png');
                    },
                    success: function(data){
                        if(data['ServerNo']=='200'){
                            $('#pic').attr('src', '/uploads/'+data['ResultData']);
                            $('#thumb').val(data['ResultData']);
                            $(obj).off('change');
                        }else{
                            alert(data['ResultData']);
                        }
                    },
                    error: function(XMLHttpRequest, textStatus, errorThrown) {
                        $('#pic').attr('src', '/img/error.png');
                        var number = XMLHttpRequest.status;
                        alert("错误号"+number+"文件上传失败!");
                    },
                    async: true
                });
            });
        });

注:url项/admin/source/uploadPic/ 前面和后面的/可以去掉测试有不同的效果，比如form里action有/source/144 的情况，file按钮在form里时

/**
     * 检查文件
     *
     * @param $file
     * @return array
     */
    private function checkFile($file)
    {
        if ($file->getClientSize() > $file->getMaxFilesize()) {
            return ['status' => false, 'msg' => '文件大小不能大于2M'];
        }

        if (!$file->isValid()) {
            return ['status' => false, 'msg' => '上传文件不符合要求'];
        }

        return ['status' => true];
    }

    /**
     * 文件上传
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function uploadPic(Request $request)
    {
        $file = $request->file('thumb');

        $check = $this->checkFile($file);

        if(!$check['status']){
            return response()->json(['ServerNo' => '400','ResultData' => $check['msg']]);
        }

        $path = public_path('uploads');
        $postfix = $file->getClientOriginalExtension();
        $fileName = md5(time().rand(0,10000)).'.'.$postfix;

        if(!$file->move($path,$fileName)){
            return response()->json(['ServerNo' => '400','ResultData' => '文件保存失败']);
        }else{
            return response()->json(['ServerNo' => '200','ResultData' => $fileName]);
        }

    }

** 只有前端交互，可预览
#+BEGIN_SRC js
                            <div class="form-group" id="areaPic">
                                <label class="control-label col-md-2 col-sm-2" for="thumb">资源缩略图 </label>
                                <div class="col-md-8 col-sm-8">
                                    <img src="/uploads/{{ $data['thumb']? $data['thumb']:'noimage.gif'
                                    }}" id="pic" style="cursor: pointer;height:100px"/>
                                    <p class="help-block">点击图片上传(格式：png/jpg/jpeg/gif, 不大于2M)</p>
                                    <input type="file" id="fileUpload" style="display: none;" />
                                    <input type="hidden" id="inputUpload" name="thumb" value="{{ $data['thumb'] }}" />
                                </div>
                            </div>


        //上传图片
        $('#pic').on('click', function(){
            $('#fileUpload').trigger('click');
        });

        $('#fileUpload').on('change', function(event){

            $('#inputUpload').removeAttr('name')
            $('#fileUpload').attr('name','thumb')

            if(fileUploadSize(event.target) > 1024*1024*2){
                $.gritter.add({
                    title: '操作消息！',
                    text: '文件超出大小限制'
                });
                return;
            }

            var src = event.target || window.event.srcElement; //获取事件源，兼容chrome/IE
            var filename = src.value;
            var postfix = filename.substring( filename.lastIndexOf('.')+1 );

            if(['png','jpeg','jpg','gif'].indexOf(postfix) == '-1'){
                $.gritter.add({
                    title: '操作消息！',
                    text: '文件格式不符合'
                });
                return;
            }

            var $file = $(this);
            var fileObj = $file[0];
            var windowURL = window.URL || window.webkitURL;
            var dataURL;

            if(fileObj && fileObj.files && fileObj.files[0]){
                dataURL = windowURL.createObjectURL(fileObj.files[0]);
                $("#pic").attr('src',dataURL);
            }else{
                dataURL = $file.val();
                var imgObj = document.getElementById("pic");
                imgObj.style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(sizingMethod=scale)";
                imgObj.filters.item("DXImageTransform.Microsoft.AlphaImageLoader").src = dataURL;
            }
        })
        //end 上传图片

#+END_SRC
#+BEGIN_SRC php
    /**
     * 文件上传
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function uploadFile(Request $request)
    {
        if($thumb = $request->input('thumb')){
            return ['code' => 2000,'img' => $thumb, 'error'=>'没有修改文件'];
        }

        if($file = $request->file('thumb')){
            $path = public_path('uploads');
            $postfix = $file->getClientOriginalExtension();
            $fileName = md5(time().rand(0,10000)).'.'.$postfix;

            if(!in_array($postfix, array('png','jpeg','jpg','gif'))){
                return ['code' => 2001,'img' => $fileName, 'error'=>'文件格式不对'];
            }

            if($file->getSize() > 1024*1024*2){
                return ['code' => 2002,'img' => $fileName, 'error'=>'文件太大'];
            }

            if($file->move($path, $fileName)){
                return ['code' => 2000,'img' => $fileName, 'error'=>''];
            }else{
                return ['code' => 5000,'img' => $fileName, 'error'=>'文件上传失败'];
            }
        }else{
            return ['code' => 2000,'img' => '', 'error'=>'无上传文件'];
        }

    }

    /**
     * 新建数据
     *
     * @param Request $request
     * @return \Illuminate\Http\RedirectResponse|\Illuminate\Routing\Redirector
     */
    public function store(Request $request)
    {

        $params = $request->except('jsonStrTags');
        $params['tags'] = json_decode($request->input('jsonStrTags'),true);

        $arr = $this->uploadFile($request);
        if($arr['code'] !== 2000){
            flash($arr['error'],'error');
            return back();
        }else{
            $params['thumb'] = $arr['img'];
        }

        $res = $this->catalog->insertCatalog($params);

        if($res){
            flash('保存成功','success');
            $pid = intval($request->input('parent_id',0));
            return redirect('admin/catalogs'.($pid>0?'/'.$pid:''));
        }else{
            $code = $this->catalog->getMessageErrorCode();
            if(isset($code)){
                if(is_string($code) && $code>2000 && $code<2100){
                    flash($this->catalog->getMessageError(),'error');
                }elseif($code=='-1005'){
                    flash('分类名称重名','error');
                }
            }
            return back()->withInput();
        }
    }

#+END_SRC
* laravel angular adminlte
管理 php artisan serve
  查看命令选项 php artisan help make:model
              php artisan make:model source
source_id  和sourceId 的注意事项
source-list.component.js 的data.source_id
config/route.config.js  
source-edit.component.js

* 安装 ubuntu apache2 nginx php7 ThinkPHP Laravel
** apache2
参考 https://www.howtoing.com/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-16-04/
    https://www.howtoing.com/how-to-set-up-apache-virtual-hosts-on-ubuntu-16-04/

sudo apt-get update
sudo apt-get install apache2

sudo apache2ctl configtest

sudo vim /etc/apache2/apache2.conf
  ServerName localhost

sudo apache2ctl configtest

开启防火墙
sudo ufw app list

sudo ufw allow in "Apache Full"

测试 http://locahost
管理方法 sudo apache2ctl restart/stop/reload
** nginx 
error: 重启后进入localhost/phpmyadmin 出现nginx forbidden
vim /etc/nginx/sites-enabled/default
把80改为8000
修改 index index.nginx-debian.html;
管理方法 启动 sudo nginx
sudo nginx -s reload/reopen

** 安装PHP

sudo apt-get install php libapache2-mod-php php-mcrypt

sudo vim /etc/apache2/mods-enabled/dir.conf
   DirectoryIndex index.php 移到前面

sudo systemctl restart apache2

sudo systemctl status apache2

sudo vim /var/www/html/phpinfo.php

测试 http://localhost/phpinfo.php

下载项目
sudo chown -R $USER:$USER /var/www 修改目录为当前用户拥有目录

sudo chmod -R 755 /var/www

git clone 
如果下载 sudo git clone ssh... 报错 not permit..
  sudo rm -rf /root/.ssh   
  sudo cp ~/.ssh -r /root/

配置虚拟主机

sudo cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/sz.rr.conf

sudo vim /etc/apache2/sites-available/sz.rr.conf

<VirtualHost *:80>
    ServerAdmin 201313488@qq.com
    ServerName sz.rr
    ServerAlias www.sz.rr
    DocumentRoot /var/www/hourlyrate-admin/php
    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>

sudo a2ensite sz.rr.conf

# sudo a2dissite 000-default.conf

sudo systemctl restart apache2

sudo vim /etc/hosts
  127.0.0.1   sz.rr

vim /var/www/hourlyrate-admin/php/phpinfo.php
测试 http://sz.rr/phpinfo.php
     http://sz.rr

加入项目目录不同，单独的目录，会出现
error:You don't have permission to access / on this server
参考：https://askubuntu.com/questions/617190/how-to-setup-apache2-virtualhosts-on-your-home-directory-on-ubuntu-14-04
vim /etc/apache2/apache2.conf
copy <Directory /balabala>...</Directory>一份对应的目录

** 调试ThinkPHP
 报错： _STORAGE_WRITE_ERROR_:./Application/Runtime... 
 解决： mkdir ./Application/Runtime
       chmod 777 ./Application/Runtime

 报错： not find function php_curl
 解决： sudo vim /etc/php/7.0/apache2/php.ini
          curl前面去掉;
       sudo apt install php-curl
       sudo systemctl restart apache2
       
 报错：Call to undefined function Think\Template\simplexml_load_string()
 解决： extension=php_xmlrpc.dll
        sudo apt install php7.0-xml
        sudo systemctl restart apache2

** 调试Laravel
安装composer
根目录composer install 
  报错缺ext-mbstring
   解决： sudo vim /etc/php/7.0/apache2/php.ini
          mbstring 前面去掉;
       sudo apt install php-mbstring
  坑：
    vim /var/www/api-backend/public/phpinfo.php
       <?php phpinfo();
    测试 http://pangtu.rr/phpinfo.php ok
    根目录 php -S localhost:8888 -t public/
    测试 http://localhost:8888 ok
    但 http://panggu.rr 报500错
  解决： 
    vim /etc/apache2/sites-available/pangu.rr.conf 
    复制粘贴 /var/www/api-backend/public
    ok
* mysql
** 命令
truncate table 表名;     清除表
** mysql 紧急停止
ubuntu下 /etc/init.d/mysql stop

** 调试
ubuntu 下
ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (2)
解决 systemctl start mysql
** 导出
mysqldump -h 192.168.100.159 -u www.data.c -p www.data.c > lbb.sql
                                用户         数据库名
然后输入密码       
** 批量插入测试数据
*** 复制 一个存储过程生成1000万条数据的方法 http://www.bcty365.com/content-35-4815-1.html
-- 创建测试的test表 
DROP TABLE IF EXISTS test;  
CREATE TABLE test(  
    ID INT(10) NOT NULL,  
    `Name` VARCHAR(20) DEFAULT '' NOT NULL,  
    PRIMARY KEY( ID )  
)ENGINE=INNODB DEFAULT CHARSET utf8;  
 
-- 创建生成测试数据的存储过程 
DROP PROCEDURE IF EXISTS pre_test;  
DELIMITER // 
CREATE PROCEDURE pre_test()  
BEGIN  
DECLARE i INT DEFAULT 0;  
SET autocommit = 0;  
WHILE i<10000000 DO  
INSERT INTO test ( ID,`Name` ) VALUES( i, CONCAT( 'Carl', i ) );  
SET i = i+1;  
IF i%2000 = 0 THEN  
COMMIT;  
END IF;  
END WHILE;  
END; // 
DELIMITER ; 
 
-- 执行存储过程生成测试数据 
CALL pre_test();
 
*** 测试
**** 插入30天播放量数据
DROP PROCEDURE IF EXISTS pre_test; 

DELIMITER // 

CREATE PROCEDURE pre_test()  
BEGIN  
DECLARE i INT DEFAULT 1; 
DECLARE totals INT;
DECLARE mydate DATETIME;
SET autocommit = 0;  

WHILE i< 31 DO 

 IF i<10 THEN
 SET mydate = CONCAT( '2017-10-0', i );
 END IF;
 IF i>9 THEN
 SET mydate = CONCAT( '2017-10-', i );
 END IF;
 
INSERT INTO `user_plays_total` (`totals`, `pcs`, `wechats`, `mobiles`, `equipments`, `others`, `created_at`)
 VALUES (ROUND(RAND()*(1500-1300)+1300), ROUND(RAND()*(90-10)+10), ROUND(RAND()*(900-800)+800), '0',
ROUND(RAND()*(500-400)+400), '0', mydate);  

SET i = i+1; 
   
END WHILE;

COMMIT;  
END; // 

DELIMITER ; 
 
-- 执行存储过程生成测试数据 
CALL pre_test();

**** 插入30用户数据,每日增加100个
DROP PROCEDURE IF EXISTS pre_test; 

DELIMITER // 

CREATE PROCEDURE pre_test()  
BEGIN  
DECLARE i INT DEFAULT 1; 
DECLARE totals INT;
DECLARE mydate DATETIME;
SET autocommit = 0;  

WHILE i< 31 DO 

 IF i<10 THEN
 SET mydate = CONCAT( '2017-10-0', i );
 END IF;
 IF i>9 THEN
 SET mydate = CONCAT( '2017-10-', i );
 END IF;
 
INSERT INTO `user_total` (`creaters`, `updaters`,`created_at`)
 VALUES (ROUND(RAND()*(1500-1000)+1000)+100*i, ROUND(RAND()*(5000-4000)+4000)+100*i, mydate);  

SET i = i+1; 
   
END WHILE;

COMMIT;  
END; // 

DELIMITER ; 
 
-- 执行存储过程生成测试数据 
CALL pre_test();

** 统计
https://yq.aliyun.com/ziliao/65088?spm=5176.8246799.blogcont.24.cLUOtc
--查询昨天的信息记录：
--注意 修改原来<= 为=
1 select * from `article` where to_days(now()) – to_days(`add_time`) = 1; 
测试
DB::select('SELECT plays_os,SUM(plays) AS num FROM user_plays 
            WHERE to_days(now()) - to_days(`created_at`) = 1 GROUP BY plays_os');  
** 关于mysql时间类型datetime与timestamp范围

datetime类型取值范围：1000-01-01 00:00:00 到 9999-12-31 23:59:59

timestamp类型取值范围：1970-01-01 00:00:00 到 2037-12-31 23:59:59

timestamp类型具有自动初始化和自动更新的特性。
** 数据库设计书推荐
高性能mysql推荐 Apress.Beginning.Database.Design.2nd.Edition.Jul.2012 是英文版，需要有空的时候读读
另外搜到了 《数据库设计入门经典》中文版书，读了2天，结论是晦涩难懂，实战价值不大
* nginx 
查看配置文件 nginx -t

* docker

阿里云脚本安装
curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet | sh -
添加APT镜像
检查版本是否改动过 sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D

echo "deb https://apt.dockerproject.org/repo ubuntu-xenial main" | sudo tee /etc/apt/sources.list.d/docker.list

sudo apt-get update

安装 Docker
sudo apt-get install docker-engine

启动 Docker 引擎
$ sudo systemctl enable docker
$ sudo systemctl start docker

将当前用户加入 docker 组：
$ sudo usermod -aG docker $USER

使用Dockerfile定制镜像
mkdir nginxmy
cd nginxmy
vim Dockfile
FROM nginx
RUN echo '<h1>Hello, Docker!</h1>' > /usr/share/nginx/html/index.html

构建镜像
docker build -t nginx:v3 .

一般来说，应该会将 Dockerfile 置于一个空目录下，或者项目根目录下。
如果该目录下没有所需文件，那么应该把所需文件复制一份过来。如果目录下有些东西确实不希望构建时传给 Docker 引擎，
那么可以用 .gitignore 一样的语法写一个 .dockerignore，该文件是用于剔除不需要作为上下文传递给 Docker 引擎的。

那么为什么会有人误以为 . 是指定 Dockerfile 所在目录呢？这是因为在默认情况下，如果不额外指定 Dockerfile 的话，
会将上下文目录下的名为 Dockerfile 的文件作为 Dockerfile。
这只是默认行为，实际上 Dockerfile 的文件名并不要求必须为 Dockerfile，而且并不要求必须位于上下文目录中
，比如可以用 -f ../Dockerfile.php 参数指定某个文件作为 Dockerfile。
当然，一般大家习惯性的会使用默认的文件名 Dockerfile，以及会将其置于镜像构建上下文目录中。

强制关闭并删除正在运行的程序docker rm -f $(docker ps -q)

* ubuntu
** boot磁盘满
sudo du -h /boot
sudo apt-get remove linux-image-    tab键
http://blog.csdn.net/wxyangid/article/details/53097208

** 壁纸
http://www.lovebizhi.com/

Ubuntu安装Variety
$ sudo add-apt-repository ppa:peterlevi/ppa
$ sudo apt-get update
$ sudo apt-get install variety

** apt彻底删除 
彻底删除 sudo apt purge 
* 如何为sudo命令定义PATH环境变量
添加所需要的路径(如 /usr/local/bin）到"secure_path"下，在开篇所遇见的问题就将迎刃而解。
Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin
http://www.linuxidc.com/Linux/2014-09/106076.htm

* node ubuntu安装
sudo apt install 的版本太旧

cd /usr/local/src
搜索nodejs镜像
sudo wget https://npm.taobao.org/mirrors/node/v6.11.0/node-v6.11.0-linux-x64.tar.gz
tar zxvf
mv node... node
cd
vim ~/.bashrc
export  PATH=/usr/local/node/bin:$PATH

source .bashrc


命令行工具 cnpm
还可以通过定制的 cnpm 命令来直接从淘宝镜像源安装模块，参考 https://npm.taobao.org/
# 安装 cnpm
npm install -g cnpm --registry=https://registry.npm.taobao.org
# 通过 cnpm 命令替代 npm 命令安装模块
cnpm install express
参考 https://blog.niceue.com/front-end-development/using-domestic-npm-images.html

* Ubuntu vim emacs 翻译工具安装
安装ui版 sudo apt install stardict
  安装本地词典 http://download.huzheng.org/
  tar -xjvf star....tar.bz2 -C /usr/share/stardict/dic
安装命令行版 sudo apt install sdcv 


支持vim翻译
  ~/.vim/plugin/sdcv.vim
    
function! Mydict()
  "执行sdcv命令查询单词的含义,返回的值保存在expl变量中
  let expl=system('sdcv -n ' . expand("<cword>"))
  "在每个窗口中执行命令，判断窗口中的文件名是否是dict-tmp，如果是，强制关闭
  windo if expand("%")=="dict-tmp" |q!|endif	
  "纵向分割窗口，宽度为25，新窗口的内容为dict-tmp文件的内容
  25vsp dict-tmp
  "设置查询结果窗口的属性，不缓存，不保留交换文件
  setlocal buftype=nofile bufhidden=hide noswapfile
  "将expl的内容显示到查询结果窗口
  1s/^/\=expl/
  "跳转回文本窗口
  wincmd p
endfunction
"按键绑定，将调用函数并执行
nmap F :call Mydict()<CR>


用法：
  非编辑模式下 调用 shift + f
  退出 C-w o

man 模式下 !sdcv hello

参考http://renwolang521.iteye.com/blog/1317789
    http://blog.codepiano.com/2012/03/24/translate-word-under-cursor-in-vim

支持emacs
;; author: pluskid
;; 调用 stardict 的命令行接口来查辞典
;; 如果选中了 region 就查询 region 的内容，
;; 否则就查询当前光标所在的词
(global-set-key [mouse-3] 'kid-star-dict);;鼠标右键
(defun kid-star-dict ()
  (interactive)
  (let ((begin (point-min))
        (end (point-max)))
    (if mark-active
        (setq begin (region-beginning)
              end (region-end))
      (save-excursion
        (backward-word)
        (mark-word)
        (setq begin (region-beginning)
              end (region-end))))
    ;; 有时候 stardict 会很慢，所以在回显区显示一点东西
    ;; 以免觉得 Emacs 在干什么其他奇怪的事情。
    (message "searching for %s ..." (buffer-substring begin end))
    (tooltip-show 
     (shell-command-to-string 
      (concat "sdcv -n " 
              (buffer-substring begin end))))))

* 翻墙 ubuntu
# http://blog.csdn.net/wf632856695/article/details/72819402
更新软件源
apt-get update
安装pip环境
apt-get install python-pip
安装shadowsocks
pip install shadowsocks
此时，如果出现了提示版本太低，则按照提示更新
pip install --upgrade pip

解决pip install 时locale.Error: unsupported locale setting
# http://blog.csdn.net/qq_33232071/article/details/51108062
export LC_ALL=C
如果提示没有setuptools模块，则安装setuptools
pip install setuptools
如果刚才shadowsocks安装成功则跳过这一步，某则继续安装shadowsocks
pip install shadowsocks
编辑配置文件
 vim /etc/shadowsocks.json
添加：

{
    "server":"45.76.157.31",
    "server_port":8388,
    "local_address": "127.0.0.1",
    "local_port":1080,
    "password":"flzx3qc",
    "timeout":300,
    "method":"aes-256-cfb"
}

name	info
server	服务器 IP (IPv4/IPv6)，注意这也将是服务端监听的 IP 地址
server_port	服务器端口
local_port	本地端端口
password	用来加密的密码
timeout	超时时间（秒）
method	加密方法，可选择 “bf-cfb”, “aes-256-cfb”, “des-cfb”, “rc4″, 等等。默认是一种不安全的加密，推荐用 “aes-256-cfb”

赋予文件权限
chmod 755 /etc/shadowsocks.json

# 安装以支持这些加密方式
# apt-get install python–m2crypto

后台运行
ssserver -c /etc/shadowsocks.json -d start

停止命令
ssserver -c /etc/shadowsocks.json -d stop

设置开机自启动
vim /etc/rc.local
加上如下命令：

#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.
ssserver -c /etc/shadowsocks.json -d start
exit 0
* 工具
** ftp
filezilla
** unzip 压缩解压中文
unzip -O cp936 UE.zip
* 备忘
** 后台模板
Metronic

