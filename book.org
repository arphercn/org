* 5	首次登入与在线求助 man page
重启X Window    C-M-<del>
X Window 与 terminal 切换         C-M-[F1]~[F6] C-M-[F7]
注销            exit
修改语系        echo $L其他ANG    $LANG=en_US.UTF-8
命令            date +%Y/%m/%d ;;   date +%H:%M
man
  查找			man -f man    whatis
  关键词查找	man -k manual    apropos
  whatis apropos 不能用时, sudo makewhatis建立数据库

关机十分钟后     shutdown -h +10 
日历            cal 5 2017
计算器          bc

* 6 Linux 的档案权限与目录配置

目录的 w 权限代表目录下的文件名可以变动(移动、删除等)
目录的 x 权限代表目录下文件的读取、修改、执行
文件的 w 权限不包括新建删除
文件的读取需要文件的 r 权限 和 目录的 x 权限

drwx------ /home/arpher/demo/ 下的所有文件其他人不能读取 

根目彔下与开机过程有关的目彔, 就不能够与根目彔放到不同的分割槽去
 /etc:配置文件
 /bin:重要执行档
 /dev:所需要的装置档案
 /lib:执行档所需的函式库不核心所需的模块
 /sbin:重要的系统执行文件

查看核心版本 uname -r
查看distribution信息 lsb_release -a

* 7 Linux 档案与目录管理

cd - 回到上一个目录
pwd -P 显示链接的实际地址
mkdir -p test1/test2/test3 建立多级递归目录
mkdir -m 755 test 建立自定义权限的目录

rmdir -p test1/test2/test3 删除递归目录
rm -r test1 删除所有的内容

cp -i 复制时询问是否覆盖
cp /bbbb -r /test  复制文件夹
cp -a /bbbb -r /test 备份文件夹，保留属性
   -u 有差异才复制，用于备份
   -d 是链接时 复制链接，不加-d默认复制实物
   -s 软链接
   -l 硬链接

取得路径文件名与目录名称
basename /etc/hosts  文件名
dirname /etc/hosts   路径

查看文档cat head tail nl(显示行号)
查看二进制 od -t oCc /etc/issue

touch 可以修改时间

umask 0002 -------w-
文件 默认 rw-rw-rw- 666 相减后默认新建值为 rw-rw-r-- 664
目录 默认 rwxrwxrwx 777 相减后默认新建值为 rwxrwxr-x 775

观察文件类型:file

命令的搜寻:
which ls 列出PATH中的命令
  可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令
  -a 列出所有的

type cd 搜bash内建命令(可以取代which)
  区分某个命令到底是由shell自带的
  -p 如果一个命令是外部命令，那么使用-p参数，会显示该命令的路径，相当于which命令
  type apache2

程序名搜索
whereis ifconfig 寻找特定档案(无选项搜所有的)
  -b 二进制  -m manual下文档 -s source来源档案
  whereis apache2

搜索 locate passwd  
  更新数据库 updatedb
  locate -r apache2 | grep conf 
  locate -r car | grep php

find
 -mtime
 +4 代表大亍等亍 5 天前的檔名:ex> find /var -mtime +4
 -4 代表小亍等亍 4 天内的档案档名: find /var -mtime -4
 4 则是代表 4-5 那一天的档案档名: find /var -mtime 4

 -newer
find /var/www/sz.rr/hourlyrate-admin/php/Application/ -newer /var/www/sz.rr/hourlyrate-admin/php/Application/Admin/Conf/config.php
find /etc -newer /etc/passwd

find /home -user arpher
find / -nouser

sudo find /var -name config.php
sudo find / -type s
sudo find / -type s -exec ls -l {} \;   找socket文件
sudo find / -perm -4000 -exec ls -l {} \;  找隐藏SUID权限的文件
sudo find /var -name '*Car*'
  s socket  f 正规文档 ...

examle 假设系统中有两个账号,分别是 Jim 与 Tom ,这两个人除了自己群组外还共同支持
一个名为 project 的群组。假设这两个用户需要共同拥有 /srv/ahome/ 目录的开发权,该目录限制
其他人进入查阅

groupadd project
useradd -G project Jim
useradd -G project Tom

mkdir /srv/ahome
chgrp project /srv/ahome
chmod 2770 /srv/ahome     0->其他人不能查看 77->同组内可以新建 2->SGID 新建的文件的组属于文件组

* 8 Linux 磁盘与文件系统管理

查看文件系统的大小
df -h /usr  查看对应的设备
  -h human
  -i 显示inode
  -T 文件类型
df -h 
  /dev/shm/ 目彔,其实是利用内存虚拟出来的磁盘空间

查看目录的大小(含文件系统(鸟哥))
sudo du -hs /*
sudo du -hs /usr
  -s summry总和

链接
ln bbbb.c bbbb.h
  硬链接，删除源文件后不影响
  实体链接叧是多了一个文件名对该 inode 号码的链接而已
ln -s bbbb.c bbbb.s 
  软链接，相当与快捷图标

查看设备分区的大小
fdisk -l

磁盘分区查看老版笔记

* 9 档案与文件系统的压缩与打包
gzip context.txt  压缩
gzip -d context.txt.gz 解压
zcat context.txt.gz 

gzip 压缩
  context.txt.gz
  -d 解压
  zcat 查看
  vim 查看编辑

bzip2 压缩
  context.txt.bz2
  -d 解压
  bzcat 查看
  vim 编辑

tar 打包
  tar -zcvf dir/ dir.tar.gz 压缩
  tar -ztvf dir.tar.gz 查看
  tar -zxvf dir.tar.gz 解压

  tar -jcvf dir/ dir.tar.bz2 压缩
  tar -jtvf dir.tar.bz2 查看
  tar -jxvf dir.tar.bz2 解压

  -C 解压缩到目录
  -p 保留权限属性

tar -jxvf dir.tar.bz2 dir/bbbb.txt 只解压一个

dd 可以备份整个文件系统(disk)
  sudo dd if=/dev/sdb1 of=./boot.dd.bak
  也可以直接复制设备，先fdisk 一个相同或稍大的分区/dev/sdb6
    sudo dd if=/dev/sdb1 of /dev/sdb6

其他备份命令dump cpio
  其他备份命令dump cpio其他备份命令dump cpio

ni meng ye shi zui le
其他备份命令dump cpio其他备份命令dump cpioyy
ni meng ye shi zui le

其他备份命令dump cpio其他备份命令dump cpio bbbbbbbbbbb

* 10 vim
* 11 认识与学习 BASH

alias

echo 
变量名 PATH HOME LANG RANDOM
mystr=bbbb
mystr2="lang is $LANG"
mystr3='lang is $LANG'

version=$(uname -r)
version2=`uname -r` 
扩增变量
PATH="$PATH":/home/bin
mystr=${mystr}cccc
若该变量需要在其他子程序执行,则需要以 export 来使变量变成环境变量:
export mystr
bash  进入子程序
echo $mystr 生效
exit
取消变量
unset mystr
如何进入到您目前核心的模块目录
cd /lib/modules/$(uname -r)/kernel

ls -l `locate crontab`

设置常用工作目录
job=/var/www  可以写入bash配置文件
cd $job

env  输出环境变量

declare 声明变量类型
打印0-9随机数
declare -i number=$RANDOM*10/32768 ; echo $number

用 set 观察所有变量 (含环境变量与自定义变量)

变量
$ 关于本shell的PID
? 上个执行指令的回传值 0 或 其他值
OSTYPE, HOSTTYPE, MACHTYPE:(主机硬件与核心的等级)
export: 自定义发量转成环境发量
影响显示结果的语系发量 (locale)
  whereis locale
发量癿有效范围
发量键盘读取、数组与声明: read, array, declare
与文件系统及程序的限制有关系: ulimit

变量内容的删除，取代与替换
echo ${path#/*arpher/bin:}  path变量从前面删除到arpher/bin:
  # 从前面开始删 
  * 通配符
echo ${path##/*:}  删掉/和最后一个:之间内容
  ## 从前面贪婪删除
echo ${path%:/*bin} 从后面开始删
  % 从后面开始删除
  %% 从后面贪婪删除
  - = ?

alias unalias
clear
history
  alias hs='history 20'

!2044
!vi  执行最近的命令

bash的环境配置文件

login_shell

/etc/profile
/etc/profile.d/*.sh
  
1. ~/.bash_profile
2. ~/.bash_login
3. ~/.profile

source :读入环境配置文件的指令

~/.bashrc
/etc/manpath.config 设置tar格式软件的manpath

~/.bash_history
~/.bash_logout

终端机的环境设定: stty, set

stty -a
/etc/inputrc

编写命令的快捷键 

和emacs相似
C-s 暂停屏幕输出
C-q 恢复屏幕输出

bash的特殊字符
  # $ [] ^ * ? ;

数据流重导向

  > < >> << 

待学的管线命令

cut, grep, sort, wc, uniq, tee, tr, col, join, paste, expand, split,
xargs

* 12 正则表示法与文件格式化处理
文件夹中找单词 grep 'article' Documents/php/learnlaravel5/app/Http/Controllers/*

wget http://linux.vbird.org/linux_basic/0330regularex/regular_express.txt

grep -n 'the' regular
  n 显示行号  v 显示不包含the的行 i不区分大小写
  搜 test 或 taste   -n[t?st]

grep -n '[0-9]' regular_express.txt 

[:alnum:] 0-9, A-Z, a-z
[:alpha:] A-Z, a-z
[:digit:] 0-9
[:lower:] a-z

grep -n 't[ae]st' regular_express.txt
grep -n '[^g]oo' regular_express.txt
grep -n '[^a-z]oo' regular_express.txt
grep -n '[0-9]' regular_express.txt
grep -n '[^[:lower:]]oo' regular_express.txt
grep -n '^the' regular_express.txt
grep -n '^[a-z]' regular_express.txt
grep -n '^[^a-zA-Z]' regular_express.txt  ^在[]里面表示非，在外面表示行首
grep -n '\.$' regular_express.txt
cat -nv regular_express.txt | head -n 10 | tail -n 6 显示6行截止到第10行
grep -n '^$' regular_express.txt 搜空白行

grep -v '^$' /etc/syslog.conf | grep -v '^#' 输出没有空格和#注释的行

grep -n 'g..d' regular_express.txt   . 一定有一个任意字符
grep -n 'g.*g' regular_express.txt   * 重复前一个 0 到无穷多次
grep -n 'o\{2\}' regular_express.txt  oo
grep -n 'go\{2,5\}g' regular_express.txt  2 到 5 个 o
grep -n 'go\{2,\}g' regular_express.txt  2 个 o 以上


sed 工具

nl /etc/passwd | sed '2,5d'    d 删除
nl /etc/passwd | sed '2a drink tea'   在第二行后(亦卲是加在第三行)加上『drink tea?』
nl /etc/passwd | sed '2a Drink tea or ......\
> drink beer ?'                        添加多行
nl /etc/passwd | sed '2,5c No 2-5 number'  2-5 行癿内容叏代成为『No 2-5 number』
nl /etc/passwd | sed -n '5,7p'   仅列出 /etc/passwd 档案内癿第 5-7 行

sed 's/要被叏代癿字符串/新癿字符串/g'
mac ifconfig 取出ip
ifconfig | grep 'inet ' | sed 's/inet //g' | sed 's/ netmask.*//g'
取出 MAN行的 不带注释#的
cat /etc/man.conf | grep 'MAN' | sed 's/^#.*//g' | sed '/^$/d'

直接修改档案内容(危险劢作)


延伸正觃表示法
egrep -v '^$|^#' regular_express.txt  去除穸白行不行首为 # 癿行列

+ 重复『一个戒一个以上』癿前一个 RE 字符
? 『零个戒一个』癿前一个 RE 字符  
\| 用戒(or)癿方式找出数个字符串 egrep -n 'gd|good' regular_express.txt                                                       
()找出『群组』字符串  egrep -n 'g(la|oo)d' regular_express.txt
()+ 多个重复群组癿判别 echo 'AxyzxyzxyzxyzC' | egrep 'A(xyz)+C'

格式化打印: printf

me Chinese English Math Average
DmTsai 80 60 92 77.33
VBird 75 55 80 70.00
Ken 60 90 70 73.33

printf '%s\t %s\t %s\t %s\t %s\t \n' $(cat printf.txt)
printf '%10s %5i %5i %5i %8.2f \n' $(cat printf.txt |\
> grep -v Name)

awk 比较倾向亍一 行当中分成数个『字段』杢处理
 last -n 5 | awk '{print $1 "\t" $3}'   取出账号不登入者癿 IP
 
 
发量名称 代表意义
NF 每一行 ($0) 拥有癿字段总数
NR 目前 awk 所处理癿是『第几行』数据
FS 目前癿分隔字符,默讣是穸格键

last -n 5| awk '{print $1 "\t lines: " NR "\t columes: " NF}'
cat /etc/passwd | \
> awk '{FS=":"} $3 < 10 {print $1 "\t " $3}'

cat /etc/passwd | \
> awk 'BEGIN {FS=":"} $3 < 10 {print $1 "\t " $3}'

cat pay.txt | \
> awk 'NR==1{printf "%10s %10s %10s %10s %10s\n",$1,$2,$3,$4,"Total" } NR>=2{total = $2 + $3 + $4
printf "%10s %10d %10d %10d %10.2f\n", $1, $2, $3, $4, total}'

diff old new

cmp 字节比较 常用于包的比较

patch 常用于版本升级
cp print.txt print2.txt
vim print2.txt
 添加 Jim 80 90 80 83.33
diff -Naur printf.txt printf2.txt > printf2.patch  生成patch文件
patch -p0 < printf2.patch 升级print.txt
 -p0 指同一目录下

pr /etc/man.conf  分页打印


demo
搜索/etc 目录含有*的文件
grep '\*' /etc/*
搜索/etc所有目录含有*的文件
find / -type f | xargs -n 10 grep '\*'
a. 先用 find 去找出档案;
b. 用 xargs 将这些档案每次丢 10 个给 grep 杢作为参数处理; 
c. grep 实际开始搜寻档案内

find / -type f | xargs -n 10 grep -l '\*'
只搜档案名

想要有个新发量,发量名为 MYIP ,这个发量 可以记彔我癿 IP 
alias myip="ifconfig | grep 'inet ' | sed 's/inet //g' | sed 's/ netmask.*//g' | grep '10.8'"
MYIP=$(myip)
如果每次登入都要生效,可以将alias不MYIP癿讴定那两行,写入你癿~/.bashrc卲 可!



* 17 程序管理与SELinux初探

C-z 暂停程序
jobs 查看暂停程序
fg %1 恢复到前台执行(% 可有可无)
bg %1 在后台变为running

前面的只针对C-c有效而已，假如通过远程终端的在后台执行
nohup ./sleep500.sh &

强制删除 kill -9 %2

ps aux 观察系统所有的程序数据 
ps -lA 也是能够观察所有系统的数据 
ps axjf 连同部分程序树状态

ps -l 仅观察自己的 bash 相关程序

查看程序pid
ps aux | grep httpd
ps axjf | grep apach2 以程序树查看

pstree -p 02043 查看pid的相关依赖程序

kill -signal 2043 
信号查看 kill -l
 -1 启动 -9 强制删除 -15 默认正常删除

删除服务 killall -9 httpd
-i 交互询问是否删除

调整程序优先级
nice -n 6 vim eeee.txt 新建程序时调整优先级
renice 5 2064 调整现有程序优先级
  nice 范围为 -20 ~ 19 ;
  root 可随意调整自己戒他人程序的 Nice 值,且范围为 -20 ~ 19 ;
  一般用户仅可调整自己程序的 Nice 值,且范围仅为 0 ~ 19 (避免一般用户抢占系统资源);

free 观察内存使用情况
注意swap 使用情况，一般来说，swap最好不要被使用，效能跟物理内存差很多

uname:查阅系统与核心相关信息
uname -a

uptime 观察系统启动时间与工作负载

netstat 列出目前系统已经建立的网络联机与unix socket状态





