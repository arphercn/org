修改主机名
hostnamectl set-hostname aliyun

配置ssh
预备工作： 
1.root登陆服务器 
ssh root@服务器IP 
然后输入阿里云配置的密码 
2.增加普通新用户 
useradd 新用户名 
passwd 新用户名 
利用useradd添加用户，passwd给这个用户设置密码 
3.公钥写入~/.ssh/authorized_keys 
客户端： 
cd ~/.ssh 
scp -P 22 id_rsa.pub 新用户名@IP地址:~/.ssh/id_rsa.pub 
服务器端： 
ssh 新用户名@服务器IP 
mkdir ~/.ssh 
chmod 700 .ssh //-rwx------ (700) -- 只有属主有读、写、执行权限。 
cd ~/.ssh 
cat id_rsa.pub >> authorized_keys 
chmod 600 ./authorized_keys //-rw------- (600) -- 只有属主有读写权限。
 	  参考https://www.douban.com/doulist/44111547/


停掉apache
	查看是否自启动chkcongig --list
	停止apachectl stop

参考
	https://nginx.org/en/docs/configure.html
	http://www.nginx.cn/install

本次安装nginx-1.10.2版
	下载
		wget https://nginx.org/download/nginx-1.10.2.tar.gz
	
	根据官方文档,安装前需要准备openssl pcre zlib程序
		检查程序是否安装方法
			1.查看/usr/local/下有没有源码安装过
			2.查看rpm -ql zlib是否yum安装过或系统已自带
				发现zlib已安装,就可以不指定zlib路径了,同样发现openssl, pcre均已安装
					./configure后会提示using system zlib library
			
	安装
		查看官方文档
		--conf-path  By default the file is named prefix/conf/nginx.conf
		--pid-path By default the file is named prefix/logs/nginx.pid

参考apache配置安装pcre,
安装pcre
		wget https://sourceforge.net/projects/pcre/files/pcre/8.39/pcre-8.39.tar.gz 

		tar -zxvf pcre-8.39.tar.gz
		./configure --help
		./configure --prefix=/usr/local/pcre
		make && make install
	yum安装openssl-devel
		
		./configure --sbin-path=/usr/local/nginx/nginx --with-http_ssl_module --with-pcre=/usr/local/src/pcre-8.39
			注意:--with-pcre=/usr/local/src/pcre-8.39指的是源码路径，因为pcre对性能稍有影响
			
		提示
			  nginx path prefix: "/usr/local/nginx"
			  nginx binary file: "/usr/local/nginx/nginx"
			  nginx modules path: "/usr/local/nginx/modules"
			  nginx configuration prefix: "/usr/local/nginx/conf"
			  nginx configuration file: "/usr/local/nginx/conf/nginx.conf"
			  nginx pid file: "/usr/local/nginx/logs/nginx.pid"
			  nginx error log file: "/usr/local/nginx/logs/error.log"
			  nginx http access log file: "/usr/local/nginx/logs/access.log"
			  nginx http client request body temporary files: "client_body_temp"
			  nginx http proxy temporary files: "proxy_temp"
			  nginx http fastcgi temporary files: "fastcgi_temp"
			  nginx http uwsgi temporary files: "uwsgi_temp"
			  nginx http scgi temporary files: "scgi_temp"

        make && make install
	启动
		/usr/local/nginx/nginx
		
安装PHP

		cd /usr/local/nginx/		
			注:conf/目录下nginx.conf 和nginx.conf.default完全相同
				注:可以使用diff工具验证
		vim conf/nginx.conf		
		修改
			server_name  aliyun;
			
			location / {
				root   html/arpher.com;
				index  index.php;
			}
			
			location ~ \.php$ {
				root           html/arpher.com;
				fastcgi_pass   127.0.0.1:9000;
				fastcgi_index  index.php;
				fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
				include        fastcgi_params;
			}
	编辑phpinfo文件测试
		touch html/arpher.com/index.php
			<?php phpinfo(); ?>
	重启nginx
		./nginx -s reload
		
	操作
		./nginx			启动
		./nginx -s quit  优雅关闭
		./nginx -s reload 重新优雅载入配置文件
		./nginx -s reopen 重新打开日志
		
		
	备注:
		本次./configure PHP时预留了--with-apxs2=/usr/local/apache24/bin/apxs
		所以当Nginx关闭时Apache便可以使用此PHP程序
			测试
				./nginx -s quit
				apachectl -f /etc/httpd.conf
				成功
				

			
		
		
